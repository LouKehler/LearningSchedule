<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <meta name="viewport" content="width=device-width, user-scalable=yes">
  <title>Aleph With Beth and Alpha with Angela Learning Schedule</title>
  <link rel="icon" href="./images/cropped-Aleph_with_Beth-logo-beth-transparent-1-32x32.png" sizes="32x32" />
  <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
  <script src="js/localization.js"></script>
  <!--
  // Todo:
  //    - Figure out a way to generate the PDFs automatically from PHP without the overhead of a large library.
  //
  // Revision history:
  // 2025/01/02 - SK - converted Perl program created by Carol C. Kankelborg to HTML/JS/PHP
  // 2025/01/27 - SK - automatically load page whenever a parameter changes and remove Load button  
  // 2025/02/08 - SK - Switch to only generating HTML lessons if they don't exist or are older than the files
  //                          - they are based on. This will speed up loading and reduce overhead.
  -->
  <style>
  body {background-color: white;}
  #section_header h1   {color: blue; text-align: center; width: 100%; margin: 0px; font-size: 1.5em;}
  p    {color: black;}
  .section_header {
/*         width: 670px; */
      max-width: 6.5in;
      border: 2px solid darkblue;
      padding: 10px;
      margin: 10px;
  }
  #display {
      max-width: 6.8in;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: wrap;
  }
/*  #print_button {
      float: right;
  } */
 @media (max-width: 600px) {
      #section_header h1   {margin: 0px; font-size: 1em;}
      #display {width: 100%;}
  }
  </style>
</head>
<body lang="EN-US">
  <div id="section_header" class="section_header">
    <h1 id='title1'>Aleph with Beth and Alpha with Angela</h1>
    <h1 id='title2'>Learning Scheduler</h1><br>
    
    <label for="lang" id='lang_label'>Language:</label>
    <select id="lang" name="lang" onchange=
        "set_cookie_from_value('lang', 'learning_program_language');">
          <option value="English">English</option>
    </select><br>
    
    <label for="learning_program" id='learning_program_label'>Learning program:</label>
    <select id="learning_program" name="learning_program" onchange=
        "set_cookie_from_value('learning_program', 'learning_program');">
          <option value="Aleph">Aleph with Beth</option>
          <option value="Alpha">Alpha with Angela</option>
    </select><br>
    
    <label for="time" id='time_per_day_label'>Time per day:</label>
    <select id="time"
        name="video_file" onchange=
        "set_cookie_from_value('time', 'learning_program_time');">
          <option value="90:00">90:00</option>
          <option value="60:00">60:00</option>
          <option value="30:00">30:00</option>
    </select><br><br>
    
    <button type="button" id="print_button" onclick="printLearningSchedule();">Print</button>
    <!-- button type="button" id="select_button" onclick="selectLearningSchedule();">Select All</button -->
    <button type="button" id="copy_button" onclick="copyLearningSchedule();">Copy</button>
    <!-- button type="button" id="download_PDF_button" onclick="downloadPDF();">Download PDF</button -->
  </div>
  
  <div id="display" title="Learning Schedule"></div>
  <script>
  
  ////////////////////////////////////////////////
  // Cookies
  ////////////////////////////////////////////////
  function setCookie(cname, cvalue, exdays) {
        var d = new Date();
        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
        var expires = "expires="+d.toUTCString();
  //~   console.log("Setting cookie " + cname + " to " + cvalue);
        document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
  }
  function getCookie(cname) {
        var name = cname + "=";
        var ca = document.cookie.split(';');
        for(var i = 0; i < ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) == ' ') {
                        c = c.substring(1);
                }
                if (c.indexOf(name) == 0) {
                        return c.substring(name.length, c.length);
                }
        }
        return "";
  }
  function get_cookies_and_set_values() {
        set_value_from_cookie('learning_program', 'learning_program');
        set_value_from_cookie('learning_program_time', 'time');
        set_value_from_cookie('learning_program_language', 'lang');
  }
  function set_value_from_cookie(cookie_name, elem_id) {
        var val = getCookie(cookie_name);
        if (val != '') {
                var e = document.getElementById(elem_id);
                e.value = val;
  //~             console.log("Setting " + elem_id + " from cookie " + cookie_name + " value=" + val);
        }
  }
  function set_checkbox_from_cookie(cookie_name, elem_id) {
        var val = getCookie(cookie_name);
        if (val != '') {
                var e = document.getElementById(elem_id);
                e.checked = (val == 'true');
  //~             console.log("Setting " + elem_id + " from cookie " + cookie_name + " value=" + val);
        }
  }
//~   function set_cookie_from_checkbox(elem_id, cookie_name) {
//~         e = document.getElementById(elem_id);
//~         setCookie(cookie_name, e.checked, 365);
//~   //~     console.log("Setting cookie " + cookie_name + " from element " + elem_id + " value=" + e.checked);
//~   }
  function set_cookie_from_value(elem_id, cookie_name) { // this happens when the user changes a value
        e = document.getElementById(elem_id);
        setCookie(cookie_name, e.value, 365);
  //~     console.log("Setting cookie " + cookie_name + " from element " + elem_id + " value=" + e.value);
      if (elem_id == 'lang') {
            setLanguage();
      }
      if (elem_id == 'learning_program') {
            var e = document.getElementById("learning_program");
            var learning_program = e.value;
            changeFavicon(learning_program == "Aleph" ? "./images/cropped-Aleph_with_Beth-logo-beth-transparent-1-32x32.png" : "./images/cropped-alpha-with-angela-logo-transparent-a-square-32x32.png");
      }
      load_from_page();
  }

  ////////////////////////////////////////////////
  //  functions to load a page and print
  ////////////////////////////////////////////////
  function load_from_page() {
        var e = document.getElementById("learning_program");
        var learning_program = e.value;
        console.log("Learning program=" + learning_program);
        var learning_program_abbr = (learning_program == "Aleph") ? "AWB" : "AWA";
        
        e = document.getElementById("lang");
        lang = e.value;
        console.log("load_from_page lang=" + lang);
        
        e = document.getElementById("time");
        var time = e.options[e.selectedIndex].text;
        
        var phrase_file = learning_program_abbr + lang + ".txt";
        var vid_file = learning_program_abbr + 'Videos.tsv';
        var opts, out_file;
        out_file = "./html/" + learning_program_abbr + "Sched_T" + time.substr(0, 2) + "_" + lang + ".htm";
        opts = '&t=' + time + '&v=' + vid_file + '&o=' + out_file + '&f=' + phrase_file +  '&l=' + lang + '&c=' + learning_program;
        console.log(opts);
        generate(opts, out_file);
  }

  function generate(opts, file_to_open) {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
                if (this.readyState == 4 && this.status == 200) {
                        if (this.responseText.includes("ERROR:")) {
                              alert(this.responseText.replaceAll("<br>", "\n"));
                        } else {
                              console.log(this.responseText);
  //~                             openInNewTab(file_to_open);
                              openInDiv(file_to_open);
                        }
                }
        };
        var versionUpdate = (new Date()).getTime();  // force update
  //~     console.log("Opts: " + opts);
        $("#display").text("");
        xhttp.open("POST", "generate.php?rnd=" + versionUpdate + opts, true);
        xhttp.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        xhttp.send("msg=test");
  }

//~   function openInNewTab(href) { // opens the output file in a new tab
//~   Object.assign(document.createElement('a'), {
//~     target: '_blank',
//~     rel: 'noopener noreferrer',
//~     href: href,
//~   }).click();
//~   }

  function openInDiv(href) { // opens the output file in the display div
        var e = document.getElementById("learning_program");
        var learning_program = e.value;
        var learning_program_abbr = (learning_program == "Aleph") ? "AWB" : "AWA";
        console.log("learning_program=" + learning_program + " abbr=" + learning_program_abbr);
        
        e = document.getElementById("lang");
        var lang = e.value;
        lang = lang.replace(' ', '%20'); // can't have spaces in url
        
        e = document.getElementById("time");
        var time = e.options[e.selectedIndex].text.substr(0, 2);
        
        var versionUpdate = (new Date()).getTime();  // force update

        $("#display").on('change', function() {
//~                 $(window).on('load', function() {
                console.log('Display has loaded!');
        });
        console.log("loading ./html/" + learning_program_abbr + "Sched_T" + time + "_" + lang + ".htm" + "?rnd=" + versionUpdate);
        $("#display").load("./html/" + learning_program_abbr + "Sched_T" + time + "_" + lang + ".htm" + "?rnd=" + versionUpdate);
        console.log('Display has loaded!');
  }

  function printLearningSchedule() {
        $("#section_header").hide();
        window.print();
        $("#section_header").show();
  }
  
  function copyLearningSchedule() {
      var dsply = document.getElementById("display");
      selectText(dsply);
      try {
          var successful = document.execCommand('copy');
          var msg = successful ? 'successful' : 'unsuccessful';
          alert(localization[lang]['copied']);
      } catch (err) {
          alert('Unable to copy, error : ' + err.message);
      }
      clearSelection();
  }
  function selectText(element) {
        var doc = document
            , text = element
            , range, selection
        ;
        if (doc.body.createTextRange) { //ms
            range = doc.body.createTextRange();
            range.moveToElementText(text);
            range.select();
        } else if (window.getSelection) { //all others
            selection = window.getSelection();
            range = doc.createRange();
            range.selectNodeContents(text);
            selection.removeAllRanges();
            selection.addRange(range);
        }
  }
  function clearSelection() {
       if (window.getSelection) {window.getSelection().removeAllRanges();}
       else if (document.selection) {document.selection.empty();}
  }
//~   function selectLearningSchedule() {
//~       var dsply = document.getElementById("display");
//~       selectText(dsply);
//~   }
  
//~   function download_file(fileURL, fileName) {
//~       var link = document.createElement('a');
//~       link.href = fileURL;
//~       link.download = fileName;
//~       document.body.appendChild(link);
//~       link.click();
//~       document.body.removeChild(link);
//~   }

//~   function downloadPDF() {
//~         var e = document.getElementById("learning_program");
//~         var learning_program = e.value;
//~         var learning_program_abbr = (learning_program == "Aleph") ? "AWB" : "AWA";
//~         
//~         e = document.getElementById("lang");
//~         var lang = e.value;
//~         
//~         e = document.getElementById("time");
//~         var time = e.options[e.selectedIndex].text.substr(0, 2);
//~         
//~         var versionUpdate = (new Date()).getTime();  // force update

//~         $("#display").on('change', function() {
//~ //                 $(window).on('load', function() {
//~                 console.log('Display has loaded!');
//~         });
//~         download_file("./pdf/" + learning_program + "Sched_T" + time + "_" + lang + ".pdf" + "?rnd=" + versionUpdate,  learning_program + "Sched_T" + time + "_" + lang + ".pdf");
//~ //         $("#display").load("./pdf/" + learning_program + "Sched_T" + time + "_" + lang + ".pdf" + "?rnd=" + versionUpdate);
//~ //         console.log('Display has loaded!');
//~   }
  
  // functions to set the text of each of the fields of this page according to language
  function setLanguagesSelector(lang) {
      var options_str = "";

     Object.keys(localization).forEach((element, index, array) => {
            options_str += '<option value="' + element + '">' + localization[lang][element.toLowerCase()] + '</option>';
      });
      var e = document.getElementById("lang");
      e.innerHTML = options_str;
      e.value = lang;
  }
    
  function setLearningProgramSelector(lang) {
      var e = document.getElementById("learning_program");
      var program = e.value;
      var options_str = "";
      options_str += '<option value="Aleph">' + localization[lang]['Aleph'] + '</option>';
      options_str += '<option value="Alpha">' + localization[lang]['Alpha'] + '</option>';
      e.innerHTML = options_str;
      e.value = program;
      changeFavicon(program == "Aleph" ? "./images/cropped-Aleph_with_Beth-logo-beth-transparent-1-32x32.png" : "./images/cropped-alpha-with-angela-logo-transparent-a-square-32x32.png");
  }
    
  function setLanguage() {
        // set the text for each label and select element based on the language selected
        var e = document.getElementById("lang");
        var lang = e.value;
        $('#lang_label').text(localization[lang]['language']);
        $('#time_per_day_label').text(localization[lang]['timePerDay']);
        $('#learning_program_label').text(localization[lang]['Learning program']);
//~         $('#load_button').text(localization[lang]['load']);
        $('#print_button').text(localization[lang]['print']);
        $('#copy_button').text(localization[lang]['copy']);
//~         $('#download_PDF_button').text(localization[lang]['downloadPDF']);
        $('#title1').text(localization[lang]['title1']);
        $('#title2').text(localization[lang]['title2']);
        setLanguagesSelector(lang);
        setLearningProgramSelector(lang);
        e = document.body;
        e.setAttribute('dir', localization[lang]['direction'] == 'RTL' ? 'rtl' : 'ltr');
  }
  function changeFavicon(src) {
      var link = document.createElement('link'),
            oldLink = document.getElementById('dynamic-favicon');
      link.id = 'dynamic-favicon';
      link.rel = 'shortcut icon';
      link.href = src;
      if (oldLink) {
            document.head.removeChild(oldLink);
      }
      document.head.appendChild(link);
  }

  // when the page is loaded get the values of each parameter from cookies they are stored in
  setLanguage(); // called the first time just to set things up for the cookies
  get_cookies_and_set_values();
  // set the text based on the language that we now know
  setLanguage();
  // load the page. Subsequent loads will be done anytime a parameter changes.
  load_from_page();
  
  document.head = document.head || document.getElementsByTagName('head')[0];
</script>
</body>
</html>
